#include <iostream>
#include <limits> // Required for numeric_limits

using namespace std;

const int SIZE = 9;
int board[SIZE][SIZE] = {
    {5, 3, 0, 0, 7, 0, 0, 0, 0},
    {6, 0, 0, 1, 9, 5, 0, 0, 0},
    {0, 9, 8, 0, 0, 0, 0, 6, 0},
    {8, 0, 0, 0, 6, 0, 0, 0, 3},
    {4, 0, 0, 8, 0, 3, 0, 0, 1},
    {7, 0, 0, 0, 2, 0, 0, 0, 6},
    {0, 6, 0, 0, 0, 0, 2, 8, 0},
    {0, 0, 0, 4, 1, 9, 0, 0, 5},
    {0, 0, 0, 0, 8, 0, 0, 7, 9}
};

bool isValid(int row, int col, int num) {
    for (int x = 0; x < SIZE; x++) {
        if (board[row][x] == num || board[x][col] == num) return false;
    }

    int startRow = row - row % 3;
    int startCol = col - col % 3;
    for (int i = 0; i < 3; i++)
        for (int j = 0; j < 3; j++)
            if (board[i + startRow][j + startCol] == num) return false;

    return true;
}

void printBoard() {
    for (int i = 0; i < SIZE; i++) {
        if (i % 3 == 0 && i != 0) cout << "---------------------\n";
        for (int j = 0; j < SIZE; j++) {
            if (j % 3 == 0 && j != 0) cout << "| ";
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
}

bool isComplete() {
    for (int i = 0; i < SIZE; i++)
        for (int j = 0; j < SIZE; j++)
            if (board[i][j] == 0) return false;
    return true;
}

int main() {
    cout << "Welcome to Sudoku!\n";
    while (!isComplete()) {
        printBoard();
        int row, col, num;

        //Improved Input Validation
        do{
            cout << "\nEnter row (1-9), column (1-9), and number (1-9): ";
            cin >> row >> col >> num;
            if(cin.fail() || row < 1 || row > 9 || col < 1 || col > 9 || num < 1 || num > 9){
                cout << "Invalid input. Please enter numbers between 1 and 9.\n";
                cin.clear(); //clear error flags
                cin.ignore(numeric_limits<streamsize>::max(), '\n'); //Discard invalid input
            }
        }while(cin.fail() || row < 1 || row > 9 || col < 1 || col > 9 || num < 1 || num > 9);


        row--; col--;

        if (board[row][col] != 0) {
            cout << "Cell already filled! Try again.\n";
        } else if (isValid(row, col, num)) {
            board[row][col] = num;
        } else {
            cout << "Invalid move! Try again.\n";
        }
    }

    cout << "\nCongratulations! You completed the Sudoku!\n";
    printBoard();
    return 0;
}
